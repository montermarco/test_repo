{"ast":null,"code":"import { ITEM_LIST_REQUEST, ITEM_LIST_SUCESS, ITEM_LIST_FAIL, ITEM_DETAIL_REQUEST, ITEM_DETAIL_SUCCESS, ITEM_DETAIL_FAIL } from './types';\nimport service from '../config/axios_service';\n\nconst listItems = (category, size = '', price_cond = '', amt = '', sortBy = '') => async dispatch => {\n  let url;\n  let url1 = `/items/${category}?sort=${sortBy}`;\n  let url2 = `/items/${category}?tamaño=${size}`;\n  let url3 = `/items/${category}?precio[${price_cond}]=${amt}`;\n  let url4 = `/items/${category}??tamaño=${size}&precio[${price_cond}]=${amt}&sort=${sortBy}`;\n  console.log(size);\n\n  try {\n    dispatch({\n      type: ITEM_LIST_REQUEST\n    });\n    const response = await service.get(`/items/${category}`);\n    console.log(url4);\n    dispatch({\n      type: ITEM_LIST_SUCESS,\n      payload: response.data.data.items\n    });\n  } catch (error) {\n    dispatch({\n      type: ITEM_LIST_FAIL,\n      payload: error.message\n    });\n  }\n}; //&adultos=${true}&precio[${price_cond}]=${amt}&sort=${sortby}\n\n\nconst detailItem = (category, id) => async dispatch => {\n  try {\n    dispatch({\n      type: ITEM_DETAIL_REQUEST\n    });\n    const response = await service.get(`/items/${category}/${id}`);\n    dispatch({\n      type: ITEM_DETAIL_SUCCESS,\n      payload: response.data.data.item\n    });\n    console.log(response.data.data.item);\n  } catch (error) {\n    dispatch({\n      type: ITEM_DETAIL_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listItems, detailItem };\n/*\n \nitems/categoty?tamaño=size \nitems/categoty?adultos=true\nitems/categoty?precio[lte]=amt\nitems/categoty?precio[gte]=amt\nitems/categoty?sort=-price\nitems/categoty?tamaño=${size}&adultos=${true}&precio[${gte}]=${amt}&sort=${-precio}\n\n */","map":{"version":3,"sources":["/Users/monter/projects/noryan/client/noryan-front/noryan_client/src/actions/itemActions.js"],"names":["ITEM_LIST_REQUEST","ITEM_LIST_SUCESS","ITEM_LIST_FAIL","ITEM_DETAIL_REQUEST","ITEM_DETAIL_SUCCESS","ITEM_DETAIL_FAIL","service","listItems","category","size","price_cond","amt","sortBy","dispatch","url","url1","url2","url3","url4","console","log","type","response","get","payload","data","items","error","message","detailItem","id","item"],"mappings":"AAAA,SAAQA,iBAAR,EAA2BC,gBAA3B,EAA6CC,cAA7C,EAA6DC,mBAA7D,EAAkFC,mBAAlF,EAAuGC,gBAAvG,QAA8H,SAA9H;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,SAAS,GAAI,CAACC,QAAD,EAAWC,IAAI,GAAG,EAAlB,EAAsBC,UAAU,GAAG,EAAnC,EAAuCC,GAAG,GAAG,EAA7C,EAAiDC,MAAM,GAAG,EAA1D,KAAiE,MAAOC,QAAP,IAAoB;AACtG,MAAIC,GAAJ;AAEA,MAAIC,IAAI,GAAI,UAASP,QAAS,SAAQI,MAAO,EAA7C;AACA,MAAII,IAAI,GAAI,UAASR,QAAS,WAAUC,IAAK,EAA7C;AACA,MAAIQ,IAAI,GAAI,UAAST,QAAS,WAAUE,UAAW,KAAIC,GAAI,EAA3D;AACA,MAAIO,IAAI,GAAI,UAASV,QAAS,YAAWC,IAAK,WAAUC,UAAW,KAAIC,GAAI,SAAQC,MAAO,EAA1F;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;;AACA,MAAI;AACFI,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAErB;AAAR,KAAD,CAAR;AACA,UAAMsB,QAAQ,GAAG,MAAMhB,OAAO,CAACiB,GAAR,CAAa,UAASf,QAAS,EAA/B,CAAvB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEpB,gBAAR;AAA0BuB,MAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBC;AAAtD,KAAD,CAAR;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACdd,IAAAA,QAAQ,CAAC;AAACQ,MAAAA,IAAI,EAAEnB,cAAP;AAAuBsB,MAAAA,OAAO,EAAEG,KAAK,CAACC;AAAtC,KAAD,CAAR;AACD;AACF,CAjBD,C,CAkBA;;;AACA,MAAMC,UAAU,GAAI,CAACrB,QAAD,EAAWsB,EAAX,KAAkB,MAAOjB,QAAP,IAAoB;AACxD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAElB;AAAR,KAAD,CAAR;AACA,UAAMmB,QAAQ,GAAG,MAAMhB,OAAO,CAACiB,GAAR,CAAa,UAASf,QAAS,IAAGsB,EAAG,EAArC,CAAvB;AACAjB,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEjB,mBAAR;AAA6BoB,MAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBM;AAAzD,KAAD,CAAR;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBM,IAA/B;AACD,GALD,CAKE,OAAOJ,KAAP,EAAc;AACdd,IAAAA,QAAQ,CAAC;AAACQ,MAAAA,IAAI,EAAEhB,gBAAP;AAAyBmB,MAAAA,OAAO,EAAEG,KAAK,CAACC;AAAxC,KAAD,CAAR;AACD;AACF,CATD;;AAYA,SAAQrB,SAAR,EAAmBsB,UAAnB;AAEA","sourcesContent":["import {ITEM_LIST_REQUEST, ITEM_LIST_SUCESS, ITEM_LIST_FAIL, ITEM_DETAIL_REQUEST, ITEM_DETAIL_SUCCESS, ITEM_DETAIL_FAIL} from './types';\nimport service from '../config/axios_service';\n\nconst listItems =  (category, size = '', price_cond = '', amt = '', sortBy = '') => async (dispatch) => {\n  let url\n\n  let url1 = `/items/${category}?sort=${sortBy}`\n  let url2 = `/items/${category}?tamaño=${size}`\n  let url3 = `/items/${category}?precio[${price_cond}]=${amt}`\n  let url4 = `/items/${category}??tamaño=${size}&precio[${price_cond}]=${amt}&sort=${sortBy}`\n\n  console.log(size)\n  try {\n    dispatch({ type: ITEM_LIST_REQUEST });\n    const response = await service.get(`/items/${category}`);\n    console.log(url4)\n    dispatch({ type: ITEM_LIST_SUCESS, payload: response.data.data.items });\n  } catch (error) {\n    dispatch({type: ITEM_LIST_FAIL, payload: error.message});\n  }\n}\n//&adultos=${true}&precio[${price_cond}]=${amt}&sort=${sortby}\nconst detailItem =  (category, id) => async (dispatch) => {\n  try {\n    dispatch({ type: ITEM_DETAIL_REQUEST});\n    const response = await service.get(`/items/${category}/${id}`);    \n    dispatch({ type: ITEM_DETAIL_SUCCESS, payload: response.data.data.item });\n    console.log(response.data.data.item)\n  } catch (error) {\n    dispatch({type: ITEM_DETAIL_FAIL, payload: error.message});\n  }\n}\n\n\nexport {listItems, detailItem};\n\n/*\n \nitems/categoty?tamaño=size \nitems/categoty?adultos=true\nitems/categoty?precio[lte]=amt\nitems/categoty?precio[gte]=amt\nitems/categoty?sort=-price\nitems/categoty?tamaño=${size}&adultos=${true}&precio[${gte}]=${amt}&sort=${-precio}\n\n */ "]},"metadata":{},"sourceType":"module"}