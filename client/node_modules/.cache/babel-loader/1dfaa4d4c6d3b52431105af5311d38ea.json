{"ast":null,"code":"import service from '../config/axios_service';\nimport { ITEM_LIST_REQUEST, ITEM_LIST_SUCESS, ITEM_LIST_FAIL, ITEM_DETAIL_REQUEST, ITEM_DETAIL_SUCCESS, ITEM_DETAIL_FAIL, PACKAGE_LIST_REQUEST, PACKAGE_LIST_SUCCESS, PACKAGE_LIST_FAIL, PACKAGE_DETAIL_REQUEST, PACKAGE_DETAIL_SUCCESS, PACKAGE_DETAIL_FAIL } from './types';\n\nconst listItems = (category, size, price_cond, sortBy) => async dispatch => {\n  console.log(size);\n  console.log(price_cond);\n  console.log(sortBy);\n  let url;\n\n  if (size && price_cond && sortBy) {\n    // all conditionc\n    url = `/items/${category}?tamaño=${size}&${price_cond}&sort=${sortBy}`;\n  } else if (size && price_cond && !sortBy) {\n    // no sort condition\n    url = `/items/${category}?tamaño=${size}&${price_cond}`;\n  } else if (size && !price_cond && !sortBy) {\n    // no sort condition nor price\n    url = `/items/${category}?tamaño=${size}`;\n  } else if (!size && price_cond && sortBy) {\n    // no size nor sort\n    url = `/items/${category}?${price_cond}sort=${sortBy}`;\n  }\n\n  try {\n    dispatch({\n      type: ITEM_LIST_REQUEST\n    }); //const response = await service.get(`/items/${category}`);\n\n    const response = await service.get(url);\n    console.log(response.data.data.items);\n    dispatch({\n      type: ITEM_LIST_SUCESS,\n      payload: response.data.data.items\n    });\n  } catch (error) {\n    dispatch({\n      type: ITEM_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailItem = (category, id) => async dispatch => {\n  try {\n    dispatch({\n      type: ITEM_DETAIL_REQUEST\n    });\n    const response = await service.get(`/items/${category}/${id}`);\n    dispatch({\n      type: ITEM_DETAIL_SUCCESS,\n      payload: response.data.data.item\n    });\n    console.log(response.data.data.item);\n  } catch (error) {\n    dispatch({\n      type: ITEM_DETAIL_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listPackage = () => async dispatch => {\n  try {\n    dispatch({\n      type: PACKAGE_LIST_REQUEST\n    });\n    const response = await service.get(`/paquetes`);\n    dispatch({\n      type: PACKAGE_LIST_SUCCESS,\n      payload: response.data.data.paquetes\n    });\n    console.log(response.data.data.paquetes);\n  } catch (error) {\n    dispatch({\n      type: PACKAGE_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailPackage = id => async dispatch => {\n  try {\n    dispatch({\n      type: PACKAGE_DETAIL_REQUEST\n    });\n    const response = await service.get(`/paquetes/${id}`);\n    dispatch({\n      type: PACKAGE_DETAIL_SUCCESS,\n      payload: response.data.data.paquete\n    });\n  } catch (error) {\n    dispatch({\n      type: PACKAGE_DETAIL_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listItems, detailItem, listPackage, detailPackage };","map":{"version":3,"sources":["/Users/monter/projects/noryan/client/noryan-front/noryan_client/src/actions/itemActions.js"],"names":["service","ITEM_LIST_REQUEST","ITEM_LIST_SUCESS","ITEM_LIST_FAIL","ITEM_DETAIL_REQUEST","ITEM_DETAIL_SUCCESS","ITEM_DETAIL_FAIL","PACKAGE_LIST_REQUEST","PACKAGE_LIST_SUCCESS","PACKAGE_LIST_FAIL","PACKAGE_DETAIL_REQUEST","PACKAGE_DETAIL_SUCCESS","PACKAGE_DETAIL_FAIL","listItems","category","size","price_cond","sortBy","dispatch","console","log","url","type","response","get","data","items","payload","error","message","detailItem","id","item","listPackage","paquetes","detailPackage","paquete"],"mappings":"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","sourcesContent":["import service from '../config/axios_service';\nimport {ITEM_LIST_REQUEST, ITEM_LIST_SUCESS, ITEM_LIST_FAIL, \n        ITEM_DETAIL_REQUEST, ITEM_DETAIL_SUCCESS, ITEM_DETAIL_FAIL,\n        PACKAGE_LIST_REQUEST, PACKAGE_LIST_SUCCESS, PACKAGE_LIST_FAIL,\n        PACKAGE_DETAIL_REQUEST, PACKAGE_DETAIL_SUCCESS, PACKAGE_DETAIL_FAIL\n      } from './types';\n\n\nconst listItems =  (category, size, price_cond, sortBy) => async (dispatch) => {\n  console.log(size)\n  console.log(price_cond)  \n  console.log(sortBy)\n\n  let url;\n\n  if(size && price_cond && sortBy){\n    // all conditionc\n    url = `/items/${category}?tamaño=${size}&${price_cond}&sort=${sortBy}`\n  \n  } else if(size && price_cond && !sortBy) {\n    // no sort condition\n    url = `/items/${category}?tamaño=${size}&${price_cond}`\n  \n  } else if(size && !price_cond && !sortBy){\n    // no sort condition nor price\n    url = `/items/${category}?tamaño=${size}`\n  \n  } else if(!size && price_cond && sortBy) {\n    // no size nor sort\n    url = `/items/${category}?${price_cond}sort=${sortBy}`\n  }\n\n\n  try {\n    dispatch({ type: ITEM_LIST_REQUEST });\n    //const response = await service.get(`/items/${category}`);\n    const response = await service.get(url);\n    console.log(response.data.data.items)\n    dispatch({ type: ITEM_LIST_SUCESS, payload: response.data.data.items });\n  } catch (error) {\n    dispatch({type: ITEM_LIST_FAIL, payload: error.message});\n  }\n}\n\nconst detailItem =  (category, id) => async (dispatch) => {\n  try {\n    dispatch({ type: ITEM_DETAIL_REQUEST});\n    const response = await service.get(`/items/${category}/${id}`);    \n    dispatch({ type: ITEM_DETAIL_SUCCESS, payload: response.data.data.item });\n    console.log(response.data.data.item)\n  } catch (error) {\n    dispatch({type: ITEM_DETAIL_FAIL, payload: error.message});\n  }\n}\n\nconst listPackage =  () => async (dispatch) => {\n  try {\n    dispatch({ type: PACKAGE_LIST_REQUEST});\n    const response = await service.get(`/paquetes`);    \n    dispatch({ type: PACKAGE_LIST_SUCCESS, payload: response.data.data.paquetes });\n    console.log(response.data.data.paquetes)\n  } catch (error) {\n    dispatch({type: PACKAGE_LIST_FAIL, payload: error.message});\n  }\n}\n\nconst detailPackage = (id) => async dispatch => {\n  try {\n    dispatch({type: PACKAGE_DETAIL_REQUEST});\n    const response = await service.get(`/paquetes/${id}`);\n    dispatch({type: PACKAGE_DETAIL_SUCCESS, payload: response.data.data.paquete});\n  } catch (error) {\n    dispatch({type: PACKAGE_DETAIL_FAIL, payload: error.message });\n  }\n}\n\nexport {listItems, detailItem, listPackage, detailPackage};\n"]},"metadata":{},"sourceType":"module"}