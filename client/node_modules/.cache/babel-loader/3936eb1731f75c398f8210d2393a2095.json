{"ast":null,"code":"import service from '../config/axios_service';\nimport { ITEM_LIST_REQUEST, ITEM_LIST_SUCESS, ITEM_LIST_FAIL, ITEM_DETAIL_REQUEST, ITEM_DETAIL_SUCCESS, ITEM_DETAIL_FAIL, PACKAGE_LIST_REQUEST, PACKAGE_LIST_SUCCESS, PACKAGE_LIST_FAIL, PACKAGE_DETAIL_REQUEST, PACKAGE_DETAIL_SUCCESS, PACKAGE_DETAIL_FAIL } from './types';\n\nconst listItems = (category, size, price_cond, sortBy) => async dispatch => {\n  console.log(size);\n  console.log(price_cond);\n  console.log(sortBy);\n  const setUrl = {\n    all: `/items/${category}`,\n    size: `/items/${category}?tamaño=${size}`,\n    price: `/items/${category}?${price_cond}`,\n    sort: `/items/${category}?sort=${sortBy}`,\n    sizeAndPrice: `/items/${category}?tamaño=${size}&${price_cond}`,\n    sizeAndSort: `/items/${category}?tamaño=${size}&sort=${sortBy}`,\n    allConditions: `/items/${category}?tamaño=${size}&${price_cond}&sort=${sortBy}`\n  };\n  let url;\n\n  if (size === null && price_cond === null && sortBy === null || size === '') {\n    url = setUrl.all;\n  } else if (size !== null && price_cond === null && sortBy === null) {\n    url = setUrl.size;\n  } else if (size === null && price_cond !== null && sortBy === null) {\n    url = setUrl.price;\n  } else if (size !== null && price_cond !== null && sortBy === null) {\n    url = setUrl.sizeAndPrice;\n  } else if (size !== null && price_cond === null && sortBy !== null) {\n    url = setUrl.sizeAndSort;\n  } else if (size !== null && price_cond !== null && sortBy !== null) {\n    url = setUrl.allConditions;\n  }\n\n  try {\n    dispatch({\n      type: ITEM_LIST_REQUEST\n    }); //const response = await service.get(`/items/${category}`);\n\n    const response = await service.get(url);\n    console.log(response.data.data.items);\n    dispatch({\n      type: ITEM_LIST_SUCESS,\n      payload: response.data.data.items\n    });\n  } catch (error) {\n    dispatch({\n      type: ITEM_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailItem = (category, id) => async dispatch => {\n  try {\n    dispatch({\n      type: ITEM_DETAIL_REQUEST\n    });\n    const response = await service.get(`/items/${category}/${id}`);\n    dispatch({\n      type: ITEM_DETAIL_SUCCESS,\n      payload: response.data.data.item\n    });\n    console.log(response.data.data.item);\n  } catch (error) {\n    dispatch({\n      type: ITEM_DETAIL_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listPackage = () => async dispatch => {\n  try {\n    dispatch({\n      type: PACKAGE_LIST_REQUEST\n    });\n    const response = await service.get(`/paquetes`);\n    dispatch({\n      type: PACKAGE_LIST_SUCCESS,\n      payload: response.data.data.paquetes\n    });\n    console.log(response.data.data.paquetes);\n  } catch (error) {\n    dispatch({\n      type: PACKAGE_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailPackage = id => async dispatch => {\n  try {\n    dispatch({\n      type: PACKAGE_DETAIL_REQUEST\n    });\n    const response = await service.get(`/paquetes/${id}`);\n    dispatch({\n      type: PACKAGE_DETAIL_SUCCESS,\n      payload: response.data.data.paquete\n    });\n  } catch (error) {\n    dispatch({\n      type: PACKAGE_DETAIL_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listItems, detailItem, listPackage, detailPackage };","map":{"version":3,"sources":["/Users/monter/projects/noryan/client/noryan-front/noryan_client/src/actions/itemActions.js"],"names":["service","ITEM_LIST_REQUEST","ITEM_LIST_SUCESS","ITEM_LIST_FAIL","ITEM_DETAIL_REQUEST","ITEM_DETAIL_SUCCESS","ITEM_DETAIL_FAIL","PACKAGE_LIST_REQUEST","PACKAGE_LIST_SUCCESS","PACKAGE_LIST_FAIL","PACKAGE_DETAIL_REQUEST","PACKAGE_DETAIL_SUCCESS","PACKAGE_DETAIL_FAIL","listItems","category","size","price_cond","sortBy","dispatch","console","log","setUrl","all","price","sort","sizeAndPrice","sizeAndSort","allConditions","url","type","response","get","data","items","payload","error","message","detailItem","id","item","listPackage","paquetes","detailPackage","paquete"],"mappings":"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","sourcesContent":["import service from '../config/axios_service';\nimport {ITEM_LIST_REQUEST, ITEM_LIST_SUCESS, ITEM_LIST_FAIL, \n        ITEM_DETAIL_REQUEST, ITEM_DETAIL_SUCCESS, ITEM_DETAIL_FAIL,\n        PACKAGE_LIST_REQUEST, PACKAGE_LIST_SUCCESS, PACKAGE_LIST_FAIL,\n        PACKAGE_DETAIL_REQUEST, PACKAGE_DETAIL_SUCCESS, PACKAGE_DETAIL_FAIL\n      } from './types';\n\n\nconst listItems =  (category, size, price_cond, sortBy) => async (dispatch) => {\n  \n  console.log(size)\n  console.log(price_cond)  \n  console.log(sortBy)\n\n  const setUrl = {    \n    all: `/items/${category}`,\n    size: `/items/${category}?tamaño=${size}`,\n    price: `/items/${category}?${price_cond}`,\n    sort: `/items/${category}?sort=${sortBy}`,    \n    sizeAndPrice: `/items/${category}?tamaño=${size}&${price_cond}`,\n    sizeAndSort: `/items/${category}?tamaño=${size}&sort=${sortBy}`,\n    allConditions: `/items/${category}?tamaño=${size}&${price_cond}&sort=${sortBy}`,\n  }\n\n  let url;\n\n  if((size === null && price_cond === null && sortBy === null) || (size === '')){\n    url = setUrl.all;\n  } else if(size !== null && price_cond === null && sortBy === null) {\n    url = setUrl.size;\n  } else if (size === null && price_cond !== null && sortBy === null){\n    url = setUrl.price;\n  } else if (size !== null && price_cond !== null && sortBy === null){\n    url = setUrl.sizeAndPrice;\n  }  else if (size !== null && price_cond === null && sortBy !== null){\n    url = setUrl.sizeAndSort;\n  } else if (size !== null && price_cond !== null && sortBy !== null){\n    url = setUrl.allConditions;\n  }\n  \n  try {\n    dispatch({ type: ITEM_LIST_REQUEST });\n    //const response = await service.get(`/items/${category}`);\n    const response = await service.get(url);\n    console.log(response.data.data.items)\n    dispatch({ type: ITEM_LIST_SUCESS, payload: response.data.data.items });\n  } catch (error) {\n    dispatch({type: ITEM_LIST_FAIL, payload: error.message});\n  }\n}\n\nconst detailItem =  (category, id) => async (dispatch) => {\n  try {\n    dispatch({ type: ITEM_DETAIL_REQUEST});\n    const response = await service.get(`/items/${category}/${id}`);    \n    dispatch({ type: ITEM_DETAIL_SUCCESS, payload: response.data.data.item });\n    console.log(response.data.data.item)\n  } catch (error) {\n    dispatch({type: ITEM_DETAIL_FAIL, payload: error.message});\n  }\n}\n\nconst listPackage =  () => async (dispatch) => {\n  try {\n    dispatch({ type: PACKAGE_LIST_REQUEST});\n    const response = await service.get(`/paquetes`);    \n    dispatch({ type: PACKAGE_LIST_SUCCESS, payload: response.data.data.paquetes });\n    console.log(response.data.data.paquetes)\n  } catch (error) {\n    dispatch({type: PACKAGE_LIST_FAIL, payload: error.message});\n  }\n}\n\nconst detailPackage = (id) => async dispatch => {\n  try {\n    dispatch({type: PACKAGE_DETAIL_REQUEST});\n    const response = await service.get(`/paquetes/${id}`);\n    dispatch({type: PACKAGE_DETAIL_SUCCESS, payload: response.data.data.paquete});\n  } catch (error) {\n    dispatch({type: PACKAGE_DETAIL_FAIL, payload: error.message });\n  }\n}\n\nexport {listItems, detailItem, listPackage, detailPackage};\n"]},"metadata":{},"sourceType":"module"}