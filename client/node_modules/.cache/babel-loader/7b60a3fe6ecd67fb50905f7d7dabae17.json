{"ast":null,"code":"import { useState } from \"react\";\nimport useInterval from \"./useInterval\";\n;\n\nfunction useSlider({\n  total = 0,\n  enabled = false,\n  useLoaded = false,\n  speed = 1000,\n  loop = true\n}) {\n  const [offset, setOffset] = useState(0);\n  const [items, setItems] = useState([]);\n\n  function incrementOffset() {\n    if (offset === total - 1) {\n      setOffset(loop ? 0 : offset);\n    } else {\n      setOffset(offset + 1);\n    }\n  }\n\n  function addItem(ref) {\n    setItems([...items, ref]);\n  }\n\n  const loaded = useLoaded ? items.length === total : true;\n  useInterval(() => {\n    if (loaded && enabled && offset < total) {\n      incrementOffset();\n    }\n  }, speed);\n  return {\n    offset,\n    addItem\n  };\n}\n\nexport default useSlider;","map":{"version":3,"sources":["/Users/monter/Desktop/noryan/client/src/hooks/useSlider.js"],"names":["useState","useInterval","useSlider","total","enabled","useLoaded","speed","loop","offset","setOffset","items","setItems","incrementOffset","addItem","ref","loaded","length"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAAwC;;AAExC,SAASC,SAAT,CAAmB;AACjBC,EAAAA,KAAK,GAAG,CADS;AAEjBC,EAAAA,OAAO,GAAG,KAFO;AAGjBC,EAAAA,SAAS,GAAG,KAHK;AAIjBC,EAAAA,KAAK,GAAG,IAJS;AAKjBC,EAAAA,IAAI,GAAG;AALU,CAAnB,EAMK;AAEH,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASY,eAAT,GAA2B;AACzB,QAAIJ,MAAM,KAAKL,KAAK,GAAG,CAAvB,EAA0B;AACxBM,MAAAA,SAAS,CAACF,IAAI,GAAG,CAAH,GAAOC,MAAZ,CAAT;AACD,KAFD,MAEO;AACLC,MAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD;AACF;;AAED,WAASK,OAAT,CAAiBC,GAAjB,EAAsB;AACpBH,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWI,GAAX,CAAD,CAAR;AACD;;AAED,QAAMC,MAAM,GAAGV,SAAS,GAAGK,KAAK,CAACM,MAAN,KAAiBb,KAApB,GAA4B,IAApD;AAEAF,EAAAA,WAAW,CAAC,MAAM;AAChB,QAAIc,MAAM,IAAIX,OAAV,IAAqBI,MAAM,GAAGL,KAAlC,EAAyC;AACvCS,MAAAA,eAAe;AAChB;AACF,GAJU,EAIRN,KAJQ,CAAX;AAMA,SAAO;AAAEE,IAAAA,MAAF;AAAUK,IAAAA;AAAV,GAAP;AACD;;AAED,eAAeX,SAAf","sourcesContent":["import { useState } from \"react\";\nimport useInterval from \"./useInterval\";;\n\nfunction useSlider({\n  total = 0,\n  enabled = false,\n  useLoaded = false,\n  speed = 1000,\n  loop = true\n  }) {\n  \n  const [offset, setOffset] = useState(0);\n  const [items, setItems] = useState([]);\n\n  function incrementOffset() {\n    if (offset === total - 1) {\n      setOffset(loop ? 0 : offset);\n    } else {\n      setOffset(offset + 1);\n    }\n  }\n\n  function addItem(ref) {\n    setItems([...items, ref]);\n  }\n\n  const loaded = useLoaded ? items.length === total : true;\n\n  useInterval(() => {\n    if (loaded && enabled && offset < total) {\n      incrementOffset();\n    }\n  }, speed);\n\n  return { offset, addItem };\n}\n\nexport default useSlider;\n"]},"metadata":{},"sourceType":"module"}